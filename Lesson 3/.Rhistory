x1$DESCn <- NULL
y1 <- df$ENTRIESn_hourly
x1 <- as.matrix(x1)
y1 <- as.matrix(y1)
summary)y1
summary(y1
)
summary(x1)
type(x1)
typeof(x1)
x1 <- as.matrix(as.double(x1)
x1 <- as.matrix(as.double(x1))
summary(x1)
x1 <- as.matrix(x1)
y1 <- as.matrix(y1)
typeof(x1)
x1 <- as.matrix(x1)
y1 <- as.matrix(y1)
typeof(x1)
x1 <- df[,4:ncol(df)]
x1$ENTRIESn_hourly <- NULL
x1$DESCn <- NULL
y1 <- df$ENTRIESn_hourly
x1 <- as.matrix(x1)
y1 <- as.matrix(y1)
typeof(x1)
typeof(x)
summary(x1)
x1 <- df[,4:ncol(df)]
x1$ENTRIESn_hourly <- NULL
x1$DESCn <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$fog <- as.factor(x1$fog)
x1$rain <- as.factor(x1$rain)
x1 <- df[,4:ncol(df)]
x1$ENTRIESn_hourly <- NULL
x1$DESCn <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
x1$fog <- as.factor(x1$fog)
x1$rain <- as.factor(x1$rain)
x1$thunder <- as.factor(x1$thunder)
y1 <- df$ENTRIESn_hourly
x1 <- model.matrix(x1)
names(x1)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
x1$fog <- as.factor(x1$fog)
x1$rain <- as.factor(x1$rain)
x1$thunder <- as.factor(x1$thunder)
y1 <- df$ENTRIESn_hourly
names(x1)
x1 <- model.matrix(ENTRIESn_hourly~.)
x1 <- model.matrix(ENTRIESn_hourly~TIMEn+Hour+EXITSn_hourly+maxpressurei+maxdewpti+mindewpti+minpressurei+meandewpti+meanpressurei+fog+rain+meanwindspdi+mintempi+meantempi)       "maxtempi"        "precipi"         "thunder")
x1 <- model.matrix(ENTRIESn_hourly~TIMEn+Hour+EXITSn_hourly+maxpressurei+maxdewpti+mindewpti+minpressurei+meandewpti+meanpressurei+fog+rain+meanwindspdi+mintempi+meantempi+maxtempi+precipi+thunder)
df <- read.csv('turnstile_data_master_with_weather.csv')
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
x1$fog <- as.factor(x1$fog)
x1$rain <- as.factor(x1$rain)
x1$thunder <- as.factor(x1$thunder)
y1 <- df$ENTRIESn_hourly
x1 <- model.matrix(ENTRIESn_hourly~TIMEn+Hour+EXITSn_hourly+maxpressurei+maxdewpti+mindewpti+minpressurei+meandewpti+meanpressurei+fog+rain+meanwindspdi+mintempi+meantempi+maxtempi+precipi+thunder)
xfactors <- model.matrix(ENTRIESn_hourly~TIMEn+Hour+EXITSn_hourly+maxpressurei+maxdewpti+mindewpti+minpressurei+meandewpti+meanpressurei+fog+rain+meanwindspdi+mintempi+meantempi+maxtempi+precipi+thunder)
xfactors <- matrix(ENTRIESn_hourly~TIMEn+Hour+EXITSn_hourly+maxpressurei+maxdewpti+mindewpti+minpressurei+meandewpti+meanpressurei+fog+rain+meanwindspdi+mintempi+meantempi+maxtempi+precipi+thunder)
xfactors <- as.matrix(x1)
df <- read.csv('turnstile_data_master_with_weather.csv')
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
x1$fog <- as.factor(x1$fog)
x1$rain <- as.factor(x1$rain)
x1$thunder <- as.factor(x1$thunder)
y1 <- df$ENTRIESn_hourly
x1 <- as.matrix(x1)
y1 <- as.matrix(y1)
typeof(x1)
typeof(y1)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
x1$fog <- as.factor(x1$fog)
x1$rain <- as.factor(x1$rain)
x1$thunder <- as.factor(x1$thunder)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
typeof(x1)
fit <- glmnet(x1, y1)
summary(x1)
x1[x1$fog==2]
x1$fog
x1$fpg
x1$fog
which(rain==max(rain, arr.ind = TRUE))
names(x1)
head(x1)
x1[1]
x1[1][1]
x1[2][1]
x1[2][]
x1 <- df[,4:ncol(df)]
x1[x1$rain>1]
x1[x1$rain>1,]
summary(x1$rain)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
summary(x1)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1)
summary(x1)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1)
summary(x1)
plot(fit)
plot(fit, label=TRUE)
print(fit)
coef(fit, s=0.1)
names(x1)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
names(x1)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1)
print(fit)
coef(fit, s=0.1)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1)
plot(fit, label=TRUE)
print(fit)
coef(fit, s=0.1)
coef(fit, s=0.5)
coef(fit, s=0.1)
cvfit = cv.glmnet(x1,y1)
plot(cvfit)
cvfit$lambda.min
coef(cvfit, s='lambda.min')
fit <- glmnet(x1, y1, family='gaussian', alpha=0, lambda=0.001)
plot(fit, label=TRUE)
print(fit)
coef(fit, s=0.1)
fit <- glmnet(x1, y1, family='gaussian', alpha=0.5, lambda=0.001)
plot(fit, label=TRUE)
df <- read.csv('turnstile_data_master_with_weather.csv')
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1, family='gaussian', alpha=0.5, lambda=0.001)
plot(fit, label=TRUE)
print(fit)
coef(fit, s=0.1)
summary(fit)
fit <- glmnet(x1, y1, family='gaussian')
plot(fit, label=TRUE)
print(fit)
coef(fit, s=0.1)
GLMCoef <- coef(fit, s=0.1)
GLMCoef
GLMCoef[0,2]
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1)
plot(fit, label=TRUE)
print(fit)
GLMCoef <- coef(fit, s='lambda.1se')
coef(fit, s='lambda.1se')
coef(fit, s='lambda.min')
cvfit = cv.glmnet(x1,y1)
plot(cvfit)
cvfit$lambda.min
coef(cvfit, s='lambda.min')
coef(cvfit, s='lambda.1se')
lmodel1 <- lm(ENTRIESn_hourly~
TIMEn +
Hour +
maxpressurei +
maxdewpti +
fog +
rain +
meanwindspdi +
mintempi +
maxtempi, data=df)
df <- read.csv('turnstile_data_master_with_weather.csv')
lmodel1 <- lm(ENTRIESn_hourly~
TIMEn +
Hour +
maxpressurei +
maxdewpti +
fog +
rain +
meanwindspdi +
mintempi +
maxtempi, data=df)
names(df)
lmodel1 <- lm(ENTRIESn_hourly~
TIMEn +
Hour +
maxpressurei +
maxdewpti +
fog +
rain +
meanwindspdi +
mintempi +
maxtempi, data=df)
dfSubset <- df[,3:ncol(df)]
names(dfSubset)
dfSubset <- df[,4:ncol(df)]
lmodel1 <- lm(ENTRIESn_hourly~., dfSubset)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1)
glmnetPrint(fit)
plot(fit, label=TRUE)
print(fit)
coef(fit, s=0.1)
cvfit = cv.glmnet(x1,y1)
plot(cvfit)
cvfit$lambda.min
coef(cvfit, s='lambda.1se')
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1, lambda=0.04499549)
plot(fit, label=TRUE)
print(fit)
coef(fit, s=0.1)
cvfit = cv.glmnet(x1,y1)
plot(cvfit)
cvfit$lambda.min
coef(cvfit, s='lambda.1se')
summary(df)
typeof(dfSubset$TIMEn)
ncol(dfSubset)
dfSubset <- df[,4:ncol(df)]
lmodel1 <- lm(ENTRIESn_hourly~., dfSubset)
dfSubset <- na.remove(dfSubset)
?na.action
dfSubset <- na.omit(dfSubset)
lmodel1 <- lm(ENTRIESn_hourly~., dfSubset)
summary(dfSubser)
summary(dfSubset)
dfSubset <- df[,4:ncol(df)]
dfSubset$DESCn <- NULL
lmodel1 <- lm(ENTRIESn_hourly~., dfSubset)
memory.limit()
memory.size()
memory.size(max=TRUE)
dfSubset <- df[,4:ncol(df)]
dfSubset$DESCn <- NULL
lmodel1 <- lm(ENTRIESn_hourly~., dfSubset)
memory.size()
?memory.size
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1, alpha=1)
plot(fit, label=TRUE)
print(fit)
coef(fit, s=0.1)
cvfit = cv.glmnet(x1,y1)
plot(cvfit)
cvfit$lambda.min
coef(cvfit, s='lambda.1se')
coef(cvfit, s='lambda.min')
predict(cvfit, newx=x1, s='lambda.min')
predictions <- predict(cvfit, newx=x1, s='lambda.min')
accuracy(y1, predictions)
View(predictions)
plot(df$ENTRIESn_hourly, type="l", xaxt="n")
par(new=TRUE)
plot(predictions,type="l", col="red",xaxt="n")
accuracy(df$ENTRIESn_hourly, as.data.frame(predictions))
predictions <- as.data.frame(predictions)
plot(df$ENTRIESn_hourly, type="l", xaxt="n")
par(new=TRUE)
plot(predictions,type="l", col="red",xaxt="n")
predictions <- predict(cvfit, newx=x1, s='lambda.min')
plot(df$ENTRIESn_hourly, type="l", xaxt="n")
predictions <- predict(cvfit, newx=x1, s='lambda.min')
plot(df$ENTRIESn_hourly, type="l", xaxt="n")
par(new=TRUE)
plot(predictions,type="l", col="red",xaxt="n")
predictions <- as.data.frame(predictions)
accuracy(df$ENTRIESn_hourly, predictions)
df$ENTRIESn_hourly
predictions
df <- read.csv('turnstile_data_master_with_weather.csv')
dfSubset <- df[,7:ncol(df)]
cmodel1 <- lm(ENTRIESn_hourly~., dfSubset)
cmodel1 <- update(cmodel1, .~.-EXITSn_hourly)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-fog)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-mindewpti)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-meandewpti)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-thunder)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-maxtempi)
summary(cmodel1)
# Sig variables are:
#   maxpressurei,
#   maxdewpti,
#   minpressurei,
#   meanpressurei,
#   rain,
#   meanwindspdi,
#   mintempi,
#   meantempi,
#   precipi
fitted.values(dmodel1)
fitted.values(cmodel1)
df <- cbind(df, predictions)
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1, alpha=1)
plot(fit, label=TRUE)
# Each curve corresponds to a variable. It shows the path of its coefficient against l1-norm of the whole
# coefficient vector at as lambda varies. The axis above indicates the number of nonzero coefficients @ the
# current lambda, which is the effective degrees of freedom(df) for the lasso
print(fit)
# It shows from left to right the number of non-0 coefficients (DF), % of null deviance explained (%dev),
# and the value of lambda. Although by default glmdefault calls for 100 values of lambda, the program
# stops early if %dev% does not change sufficientnly from one lambda to the next.
coef(fit, s=0.1)
# Shows the coefficents Lasso found
# crossvalidation
cvfit = cv.glmnet(x1,y1)
plot(cvfit)
#finding the min mean cross validation error
cvfit$lambda.min
coef(cvfit, s='lambda.1se')
coef(cvfit, s='lambda.min')
#The variables using GLMNET
# TIMEn,
# Hour,
# maxpressurei,
# maxdewpti,
# fog,
# rain,
# meanwindspdi,
# mintempi,
# maxtempi
predictions <- predict(cvfit, newx=x1, s='lambda.min')
plot(df$ENTRIESn_hourly, type="l", xaxt="n")
par(new=TRUE)
plot(predictions,type="l", col="red",xaxt="n")
predictions <- as.data.frame(predictions)
df <- cbind(df, predictions)
names(df)
accuracy(df$ENTRIESn_hourly, df$1)
df$1
View(df)
ncol(df)
df[,23]
accuracy(df$ENTRIESn_hourly, df[,23])
dmodel1 <- lm(ENTRIESn_hourly~
rain +
precipi +
Hour +
meantempi, data=df)
accuracy(df$ENTRIESn_hourly,fitted.values(dmodel1))
df <- read.csv('turnstile_data_master_with_weather.csv')
dmodel1 <- lm(ENTRIESn_hourly~
rain +
precipi +
Hour +
meantempi, data=df)
summary(dmodel1)
dfSubset <- df[,7:ncol(df)]
cmodel1 <- lm(ENTRIESn_hourly~., dfSubset)
cmodel1 <- update(cmodel1, .~.-EXITSn_hourly)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-fog)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-mindewpti)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-meandewpti)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-thunder)
summary(cmodel1)
cmodel1 <- update(cmodel1, .~.-maxtempi)
summary(cmodel1)
# Sig variables are:
#   maxpressurei,
#   maxdewpti,
#   minpressurei,
#   meanpressurei,
#   rain,
#   meanwindspdi,
#   mintempi,
#   meantempi,
#   precipi
a1 <- accuracy(df$ENTRIESn_hourly,fitted.values(dmodel1))
a2 <- accuracy(df$ENTRIESn_hourly,fitted.values(cmodel1))
a1
a2
plot(df$ENTRIESn_hourly, type="l", xaxt="n")
par(new=TRUE)
plot(fitted.values(dmodel1),type="l", col="red",xaxt="n")
#Custom
plot(df$ENTRIESn_hourly, type="l", xaxt="n")
par(new=TRUE)
plot(fitted.values(cmodel1),type="l", col="red",xaxt="n")
x1 <- df[,4:ncol(df)]
x1$DESCn <- NULL
x1$ENTRIESn_hourly <- NULL
x1$EXITSn_hourly <- NULL
x1$TIMEn <- as.factor(x1$TIMEn)
x1$Hour <- as.factor(x1$Hour)
y1 <- df$ENTRIESn_hourly
x1 <- data.matrix(x1)
y1 <- as.matrix(y1)
fit <- glmnet(x1, y1, alpha=1)
plot(fit, label=TRUE)
# Each curve corresponds to a variable. It shows the path of its coefficient against l1-norm of the whole
# coefficient vector at as lambda varies. The axis above indicates the number of nonzero coefficients @ the
# current lambda, which is the effective degrees of freedom(df) for the lasso
print(fit)
# It shows from left to right the number of non-0 coefficients (DF), % of null deviance explained (%dev),
# and the value of lambda. Although by default glmdefault calls for 100 values of lambda, the program
# stops early if %dev% does not change sufficientnly from one lambda to the next.
coef(fit, s=0.1)
# Shows the coefficents Lasso found
# crossvalidation
cvfit = cv.glmnet(x1,y1)
plot(cvfit)
df <- read.csv('turnstile_data_master_with_weather.csv')
names(df)
